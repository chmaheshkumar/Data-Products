swirl()
library("swirl")
swirl()
library(swirl)
swirl()
x1c <- simbias()
apply(xlc,1,mean)
apply(x1c,1,mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1,fit3)
deviance(fit3)
d<-deviance(fit3)/43
deviance(fit1)-deviance(fit3)
n<-(deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2,43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1,fit3,fit5,fit6)
View(ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, binomial, ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(mdl)
qchisq(0.95,1)
var(rpois(1000, 50))
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date,
| poisson, hits)
mdl <- glm(visits ~ date,poisson, hits)
summary(mdl)
confint(mdl,'date')
exp(confint(mdl,'date'))
which.max(hits[,'visits'])
hits[704,]
mdl$fitted.values[704]
lamda<-mdl$fitted.values[704]
lambda<-mdl$fitted.values[704]
qpois(.95,lambda)
qpois(.95,lambda)
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits,offset = log(visits + 1))
qpois(.95,mdl2$fitted.values[704])
library(slidify)
install.packages(c("cli", "colorspace", "gh", "Hmisc", "isoband", "lme4", "lubridate", "pillar", "processx", "raster", "RcppArmadillo", "rgl", "rlang", "sysfonts", "vctrs"))
library(devtools)
install.packages(c("isoband", "lme4"))
library(slidify)
install.packages(c("isoband", "lme4"))
install_github('slidifyLibraries', 'ramnathv')
install_github('ramnathv/slidifyLibraries',ref='dev')
library(slidifyLibraries)
install.packages(c("isoband", "lme4"))
setwd("C:/Users/Mahesh/Documents/R/Data-Products/my_example/my_example")
library("slidify")
slidify("index.Rmd")
---
title       : Shiny App and Reproducible Pitch
subtitle    : Datasets Summary
author      : Mahesh.Ch
job         : December2020
framework   : io2012        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     : tomorrow      #
widgets     : []            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
---
slidify("index.Rmd")
slidify('index.Rmd')
library(knitr)
browseURL("index.Rmd")
browseURL('index.html')
shiny::runApp('C:/Users/Mahesh/Documents/R/Data-Products/my_example')
browseURL('index.html')
library(knitr)
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
library(knitr)
browseURL('index.html')
runApp('C:/Users/Mahesh/Documents/R/Data-Products/my_example')
library(knitr)
browseURL('index.html')
library(knitr)
browseURL('index.html')
slidify('index.Rmd')
library(knitr)
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
## Introduction
publish_github(chmaheshkumar, Data-Products)
publish_github("chmaheshkumar","Data-Products")
publish_github(username="chmaheshkumar",repo="Data-Products")
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.md')
browseURL('index.html')
slidify('index.Rmd', options = list(embed = TRUE))
rPubsUpload('My Presentation', 'slides.html')
library(slidify)
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
publish(title= <TITLE>, html_file="index.html", host=rpubs)
publish(title= example, html_file="index.html", host=rpubs)
slidify('index.Rmd')
slidify("index.Rmd")
publish_github("chmaheshkumar","Data-Products")
slidify('index.Rmd')
